jobs:
  rs-generate:
    executor: go
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - rs-generate-v18-{{ checksum "go.sum" }}-{{checksum "go.mod"}}
      - install-asdf
      - run:
          name: "Install asdf plugins"
          command: |
            asdf plugin add protoc || true
            asdf plugin add nodejs || true
      - run:
          name: "Install asdf managed executables"
          command: |
            asdf install protoc
            asdf install nodejs
      - node/install-packages:
          app-dir: ~/src/contracts
          override-ci-command: npm install
      - run: make install-codegen-tools
      - run:
          name: Remove generated files
          command: |
            find . -name '*.gen.go' |xargs rm
      - run: make generate
      - run:
          name: Remove generated doc files
          command: |
            find ./docs -name '*.md' -delete
      - run: make docs
      - save_cache:
          key: rs-generate-v18-{{ checksum "go.sum" }}-{{checksum "go.mod"}}
          paths:
            - "~/go/pkg/mod"
            - "~/.cache/go-build"
            - ~/.asdf
      - run: git diff --exit-code

  rs-build:
    parameters:
      go-version:
        type: string
    executor: << parameters.go-version >>
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - go-mod-v6-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - run: go get -d ./...
      - save_cache:
          key: go-mod-v6-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - ~/go/pkg/
      - restore_cache:
          keys:
            - rs-build-<< parameters.go-version >>-v3-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - install-asdf
      - run:
          name: "Install asdf plugins"
          command: |
            asdf plugin add tinygo https://github.com/schmir/asdf-tinygo.git || true
            asdf plugin add binaryen https://github.com/birros/asdf-binaryen.git || true
      - run:
          name: "Install asdf managed executables"
          command: |
            asdf install tinygo
            asdf install binaryen
      - run: make build wasm
      - run:
          name: "Run unit tests with gotestsum"
          command: |
            mkdir -p report/unit report/integration
            gotestsum -f standard-verbose --junitfile report/unit/tests.xml -- -short -race ./...
      - run:
          name: Wait for PostgreSQL
          command: |
            if [[ -v ROLLING_SHUTTER_TESTDB_URL ]]; then
              dockerize -wait tcp://localhost:5432 -timeout 1m
            fi
      - run:
          name: "Run integration tests with gotestsum"
          command: |
            gotestsum -f standard-verbose --junitfile report/integration/tests.xml -- -race -p 1 -run Integration -count=1 ./...
      - store_test_results:
          path: report
      - save_cache:
          key: rs-build-<< parameters.go-version >>-v3-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - "~/.cache/go-build"

  build-release:
    parameters:
      go-os-arch:
        type: string
    executor: go
    working_directory: ~/
    steps:
      - run:
          name: Configure environment for private repository
          command: |
            mkdir ~/.ssh; chmod 700 ~/.ssh
            echo >>~/.ssh/known_hosts github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            git config --global url."git@github.com:shutter-network/rolling-shutter".insteadOf https://github.com/shutter-network/rolling-shutter
            echo >>${BASH_ENV} export GOPRIVATE=github.com/shutter-network/rolling-shutter/rolling-shutter
      - run:
          name: Configure environment
          command: |
            version=$(echo ${CIRCLE_TAG} | sed -e s#^rolling-shutter/##)
            test -z ${version} && version=${CIRCLE_SHA1}
            echo >>${BASH_ENV} export VERSION="${version}"

            echo >>${BASH_ENV} osarch=<< parameters.go-os-arch >>
            # set GOOS, GOARCH from osarch:
            echo SUZTPSctJyByZWFkIC1yIEdPT1MgR09BUkNIIDw8PCAke29zYXJjaH0K |base64 --decode >>${BASH_ENV}
            echo >>${BASH_ENV} export GOOS GOARCH
      - run:
          name: Go install
          command: |
            env CGO_ENABLED=0 go install github.com/shutter-network/rolling-shutter/rolling-shutter@${CIRCLE_SHA1}
      - run:
          name: Copy binary
          command: |
            dst=${HOME}/release-bin/rolling-shutter-$GOOS-$GOARCH-$VERSION
            mkdir ${HOME}/release-bin
            if test -e ${HOME}/go/bin/rolling-shutter; then
              mv ${HOME}/go/bin/rolling-shutter ${dst}
            else
              mv ${HOME}/go/bin/${GOOS}_${GOARCH}/rolling-shutter ${dst}
            fi
            du -h ${dst}
      - persist_to_workspace:
          root: "~"
          paths:
            - "release-bin/"

  publish-release:
    executor: go
    working_directory: ~/
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Configure environment
          command: |
            version=$(echo ${CIRCLE_TAG} | sed -e s#^rolling-shutter/##)
            echo >>${BASH_ENV} export VERSION="${version}"
      - run: go install github.com/tcnksm/ghr@v0.14.0
      - run:
          name: Upload binaries
          command: |
            du -hc release-bin/*
            ghr -u shutter-network -r rolling-shutter ${CIRCLE_TAG} release-bin

  rs-lint:
    executor: go
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - go-mod-v6-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - restore_cache:
          keys:
            - rs-lint-v13-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - install-asdf
      - run:
          name: "Install golangci-lint"
          command: |
            asdf plugin add golangci-lint || true
            asdf install golangci-lint
      - run: |
          make lint-changes
      - save_cache:
          key: rs-lint-v13-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - "~/.cache/go-build"
            - "~/.cache/golangci-lint"
            - "~/.asdf"
workflows:
  rolling-shutter:
    jobs:
      - rs-generate:
          filters:
            tags:
              only: /.*/
      - rs-build:
          matrix:
            parameters:
              go-version: [go-integration]
          filters:
            tags:
              only: /.*/
      - build-release:
          matrix:
            parameters:
              go-os-arch:
                [
                  "linux-amd64",
                  "linux-arm64",
                  "freebsd-amd64",
                  "openbsd-amd64",
                  "darwin-amd64",
                  "darwin-arm64",
                ]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^rolling-shutter\/v\d+\.\d+\.\d+$/
      - publish-release:
          requires:
            - rs-build
            - build-release
          context:
            - upload-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^rolling-shutter\/v\d+\.\d+\.\d+$/
      - rs-lint:
          filters:
            branches:
              ignore: /main/
