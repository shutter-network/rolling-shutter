executors:
  base:
    docker:
      - image: cimg/base:2022.12

  openjdk:
    docker:
      - image: cimg/openjdk:17.0.5-node

jobs:
  prepare-contracts:
    executor: openjdk
    working_directory: ~/src/contracts
    steps:
      - checkout:
          path: ~/src
      - node/install-packages
      - run:
          name: "Compile contracts"
          command: |
            npx hardhat compile
      - persist_to_workspace:
          root: "~"
          paths:
            - "src/contracts/node_modules"
            - ".cache/hardhat-nodejs"

  build-exe:
    executor: go
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - run: make
      - persist_to_workspace:
          root: "~"
          paths: src/rolling-shutter/bin

  prepare-test-runner:
    executor: openjdk
    working_directory: ~/src/play
    steps:
      - checkout:
          path: ~/src
      - attach_workspace:
          at: ~/
      - install-asdf
      - run:
          name: "Install babashka"
          command: |
            asdf plugin add babashka
            asdf install babashka
      - persist_to_workspace:
          root: "~"
          paths:
            - ".asdf"

      - run:
          name: "Install clojure"
          command: |
            asdf plugin add clojure
            asdf install clojure
      - run:
          name: "Simplify bb.edn"
          command: |
            bb ci-gen
            rm bb.edn
      - run:
          name: "Downloading clojure dependencies"
          command: |
            clojure -P
      - run:
          name: "Build uberjar"
          command: |
            clojure -T:build

      - persist_to_workspace:
          root: "~"
          paths:
            - "src/play/sht-standalone.jar"
            - "src/play/ci-bb.edn"

  test-system:
    parameters:
      nr:
        type: string
    executor: system-tests
    working_directory: ~/src/play
    steps:
      - checkout:
          path: ~/src
      - attach_workspace:
          at: ~/
      - run:
          name: "Configure environment"
          command: |
            echo >${BASH_ENV} 'source ~/.asdf/asdf.sh'
            echo >>${BASH_ENV} export ROLLING_SHUTTER_CHAIN_ROOT=${HOME}/src
            echo >>${BASH_ENV} export ROLLING_SHUTTER_BOOTSTRAP_SIGNING_KEY=479968ffa5ee4c84514a477a8f15f3db0413964fd4c20b08a55fed9fed790fad
            echo >>${BASH_ENV} export ROLLING_SHUTTER_CHAIN_GENESIS_KEYPER=0x440Dc6F164e9241F04d282215ceF2780cd0B755e
      - run:
          name: Wait for PostgreSQL
          command: |
            dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: "Run whole system tests"
          command: |
            env ROLLING_SHUTTER_NOCOLOR=1 java -jar sht-standalone.jar << parameters.nr >>
      - run:
          name: "Tar work folder"
          command: |
            tar -czf work.tgz work
          when: always
      - store_artifacts:
          path: work.tgz
          destination: work.tgz
      - store_artifacts:
          path: work
          destination: work

workflows:
  test-system:
    jobs:
      - prepare-contracts
      - build-exe
      - prepare-test-runner
      - test-system:
          requires:
            - prepare-test-runner
            - prepare-contracts
            - build-exe
          matrix:
            parameters:
              nr:
                [
                  "change-keyper-set",
                  "late-keyper-dkg-works",
                  "keyper-dkg-works",
                  "collator-basic-works",
                ]
