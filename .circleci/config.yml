version: 2.1

commands:
  install-asdf:
    steps:
      - run:
          name: Install asdf
          command: |
            if [[ -e ~/.asdf ]]; then
              echo "asdf already installed"
            else
              git clone --depth 1 https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.9.0
            fi
            echo >${BASH_ENV} 'source ~/.asdf/asdf.sh'

orbs:
  node: circleci/node@4.7

executors:
  py:
    docker:
      - image: cimg/python:3.12.7-node
        environment:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"

  node18:
    docker:
      - image: cimg/node:18.17.0

  go:
    docker:
      - image: cimg/go:1.21.1
        environment:
          GO111MODULE: "on"
          PIP_DISABLE_PIP_VERSION_CHECK: "1"

  go-integration:
    docker:
      - image: cimg/go:1.21.1
        environment:
          GO111MODULE: "on"
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
          ROLLING_SHUTTER_TESTDB_URL: postgres://pguser:password@localhost:5432/testdb
      - image: cimg/postgres:13.9
        environment:
          POSTGRES_USER: pguser
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb

jobs:
  pre-commit:
    executor: py
    working_directory: ~/src
    steps:
      - checkout
      - run:
          name: Prepare system
          command: |
            cp .tool-versions ~
      - install-asdf
      - run:
          name: Install pre-commit with asdf
          command: |
            asdf plugin add golang
            asdf install golang
            asdf plugin add pre-commit
            asdf install pre-commit
      - restore_cache:
          keys:
            - go-mod-v7-{{ checksum "rolling-shutter/go.sum" }}-{{ checksum "rolling-shutter/go.mod" }}
      - restore_cache:
          key: pre-commit-cache-v11-{{ checksum ".pre-commit-config.yaml" }}
      - run: pre-commit install-hooks
      - save_cache:
          key: pre-commit-cache-v11-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit
            - ~/.local
      - run: SKIP=generate pre-commit run --show-diff-on-failure -a

  rs-generate:
    executor: go
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - rs-generate-v19-{{ checksum "go.sum" }}-{{checksum "go.mod"}}
      - install-asdf
      - run:
          name: "Install asdf plugins"
          command: |
            asdf plugin add protoc || true
            asdf plugin add nodejs || true
      - run:
          name: "Install asdf managed executables"
          command: |
            asdf install protoc
            asdf install nodejs
      - node/install-packages:
          app-dir: ~/src/contracts
          override-ci-command: npm install
      - run: make install-codegen-tools
      - run:
          name: Remove generated files
          command: |
            find . -name '*.gen.go' |xargs rm
      - run:
          name: Remove generated doc files
          command: |
            find ./docs -name '*.md' -delete
      - run: make generate
      - save_cache:
          key: rs-generate-v19-{{ checksum "go.sum" }}-{{checksum "go.mod"}}
          paths:
            - "~/go/pkg/mod"
            - "~/.cache/go-build"
            - ~/.asdf
      - run: git diff --exit-code

  rs-test:
    parameters:
      go-version:
        type: string
    executor: << parameters.go-version >>
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - go-mod-v8-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - run: go get -d ./...
      - save_cache:
          key: go-mod-v8-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - ~/go/pkg/
      - restore_cache:
          keys:
            - rs-build-<< parameters.go-version >>-v4-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - install-asdf
      - run:
          name: "Install asdf plugins"
          command: |
            asdf plugin add tinygo https://github.com/schmir/asdf-tinygo.git || true
            asdf plugin add binaryen https://github.com/birros/asdf-binaryen.git || true
            asdf plugin add nodejs || true
      - run:
          name: "Install asdf managed executables"
          command: |
            asdf install tinygo
            asdf install binaryen
            asdf install nodejs
      - run:
          name: "Run unit tests with gotestsum"
          command: |
            mkdir -p report/unit report/integration
            gotestsum -f standard-verbose --junitfile report/unit/tests.xml -- -short -race ./...
      - run:
          name: Wait for PostgreSQL
          command: |
            if [[ -v ROLLING_SHUTTER_TESTDB_URL ]]; then
              dockerize -wait tcp://localhost:5432 -timeout 1m
            fi
      - run:
          name: "Run integration tests with gotestsum"
          command: |
            gotestsum -f standard-verbose --junitfile report/integration/tests.xml -- -race -p 1 -run Integration -count=1 ./...
      - store_test_results:
          path: report
      - save_cache:
          key: rs-build-<< parameters.go-version >>-v5-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - "~/.cache/go-build"

  rs-lint:
    executor: go
    resource_class: medium+
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - go-mod-v7-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - restore_cache:
          keys:
            - rs-lint-v13-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - install-asdf
      - run:
          name: "Install golangci-lint"
          command: |
            asdf plugin add golangci-lint || true
            asdf install golangci-lint
      - run: |
          make lint-changes
      - save_cache:
          key: rs-lint-v14-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - "~/.cache/go-build"
            - "~/.cache/golangci-lint"
            - "~/.asdf"

  build-docker-image:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Configure Docker tag
          # Set the DOCKER_TAG environment variable based on the branch or tag.
          # Final release tags (i.e. without a, b, or rc) are only allowed on the "main" branch.
          command: |
            DOCKER_BASE=ghcr.io/shutter-network
            if [[ -z "$CIRCLE_TAG" ]]; then
              if [[ -z "$CIRCLE_PR_NUMBER" ]]; then
                DOCKER_TAG=${DOCKER_BASE}/unverified-dev-build-do-not-use:branch-${CIRCLE_BRANCH//\//_}-${CIRCLE_BUILD_NUM}
              else
                DOCKER_TAG=${DOCKER_BASE}/unverified-dev-build-do-not-use:PR${CIRCLE_PR_NUMBER}-${CIRCLE_BUILD_NUM}
              fi
            else
              if [[ -z $CIRCLE_BRANCH ]]; then
                BRANCHES=$(git branch -a --contains tags/$CIRCLE_TAG)
                CIRCLE_BRANCH=${BRANCHES##*/}
                echo "CIRCLE_BRANCH is empty, trying to set it from git, result: $CIRCLE_BRANCH"
              fi
              if [[ $CIRCLE_BRANCH != "main" && ! $CIRCLE_TAG =~ (a|b|rc) ]]; then
                echo "Final release tags are only allowed on main branch."
                exit 1
              else
                DOCKER_TAG=${DOCKER_BASE}/keyper:${CIRCLE_TAG}
              fi
            fi
            echo "${DOCKER_TAG}"
            echo "DOCKER_TAG=${DOCKER_TAG}" >> $BASH_ENV
      - run:
          name: Docker login
          command: |
            echo $UPLOAD_GHCR_IO | docker login ghcr.io -u rolling-shutter-deployment --password-stdin
      - run:
          name: "Build and push docker image"
          command: |
            docker buildx create --use
            docker buildx build \
              --push \
              --progress plain \
              --platform linux/amd64 \
              -f docker/build-src/rolling-shutter/Dockerfile \
              -t "${DOCKER_TAG}" \
              .

workflows:
  rolling-shutter:
    jobs:
      - pre-commit:
          filters:
            tags:
              only: /.*/

      - rs-lint:
          filters:
            tags:
              only: /.*/

      - rs-generate:
          filters:
            tags:
              only: /.*/

      - rs-test:
          matrix:
            parameters:
              go-version: [go-integration]
          filters:
            tags:
              only: /.*/

      - build-docker-image:
          requires:
            - rs-lint
          filters:
            tags:
              only: /.*v[0-9]+\.[0-9]+.*/
          context:
            - upload-release
