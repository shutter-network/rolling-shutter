// Code generated by sqlc. DO NOT EDIT.
// source: query.sql

package cltrdb

import (
	"context"
)

const getMeta = `-- name: GetMeta :one
SELECT key, value FROM collator.meta_inf WHERE key = $1
`

func (q *Queries) GetMeta(ctx context.Context, key string) (CollatorMetaInf, error) {
	row := q.db.QueryRow(ctx, getMeta, key)
	var i CollatorMetaInf
	err := row.Scan(&i.Key, &i.Value)
	return i, err
}

const insertMeta = `-- name: InsertMeta :exec
INSERT INTO collator.meta_inf (key, value) VALUES ($1, $2)
`

type InsertMetaParams struct {
	Key   string
	Value string
}

func (q *Queries) InsertMeta(ctx context.Context, arg InsertMetaParams) error {
	_, err := q.db.Exec(ctx, insertMeta, arg.Key, arg.Value)
	return err
}
